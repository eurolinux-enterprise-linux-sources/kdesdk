# Sample configuration file for kdesvn-build.
#
# To use this sample configuration file, copy it to ~/.kdesvn-buildrc, and then
# edit it to suit your desires.

# Global settings go in this section.  They apply to every module unless
# overridden later.
global

# This is the directory that your KDE sources are downloaded to.  This
# directory also holds the build and log directories by default.
#	source-dir ~/kdesvn

# This is the directory that KDE will end up installed at.  The default is
# appropriate for a single-user installation of KDE, which requires no root
# permissions.  If you'd like, you can install and use the sudo program to
# install KDE anywhere on your system, in conjunction with the
# make-install-prefix option.
#	kdedir ~/kde
#
# You can overwrite the installation directory for a given module using
# the per-module "prefix" option. Note that when doing this you need to
# set KDEDIRS, PATH and LD_LIBRARY_PATH to point to both directories,
# and that you should use separate test users or KDEHOME values to separate
# the ksycoca databases. Only set prefix if you know what you're doing.

# This is the Qt installation to use to build KDE.  The default is qt-copy
# from Subversion.  Qt will be installed to this directory, so it is
# recommended to use something like ~/qt-4.
# KDE /trunk requires a very recent Qt so qt-copy is the best route if you're
# building /trunk.  If you are building an older branch you may use your
# system installed Qt by setting qtdir to point to it (what qmake -v
# reports with the /lib removed).
	qtdir ~/qt4  # Default to installing Qt

# By default (if the above is commented out), you are getting trunk.
# If instead you want to check out another branch, like 4.2, use
#	branch 4.2
#
# but also see the qt-copy and kdesupport modules below, which has special
# requirements

# This is the Subversion server to download the KDE sources from.  Developers:
# Don't forget to add your username to the URL if necessary!
#	svn-server svn://anonsvn.kde.org/home/kde

# cmake-options controls the compilation options for building KDE 4 modules.
# These options apply to all KDE modules unless otherwise specified.
# NOTE: If you want the cxxflags option below to work (advanced users only)
# then make sure to set the "-DCMAKE_BUILD_TYPE=none" here, or in the specific
# module's cmake-options
#
# Also see http://techbase.kde.org/Development/Tutorials/CMake#Command_Line_Variables
#	cmake-options -DKDE4_BUILD_TESTS:BOOL=ON
	cmake-options -DCMAKE_BUILD_TYPE=RelWithDebInfo

# These are the default options passed to the make command.  The default tries
# to build with 2 parallel compiles.  If you are using distcc or have SMP, you
# should experiment with setting this value higher for best performance.
#	make-options -j2

# KDE has one of the most extensive translation packages in the world.  They
# are stored in the l10n module.  kdesvn-build can automatically try to build
# and install languages for you, using this parameter.  It should be a list
# of languages to build and install.  This option requires the language code
# as present in l10n.  You can look these codes up at
# http://i18n.kde.org/teams/
#	kde-languages de        # German
#	kde-languages fr        # French
#	kde-languages en_GB cs  # British English and Czech

# If you would like install KDE to the system (DO NOT INSTALL *over* a prior
# installation!), then you'll probably need to use sudo to install everything.
#
# The -S parameter causes sudo to read from standard input (which is redirected
# by kdesvn-build).  This means that if sudo has to ask for your password, it
# will fail, you need to configure sudo to be able to run "make install" and
# without requesting a password.
#
# In addition, you can run kdesvn-build --no-install, and then
# sudo kdesvn-build --install if you are unable to configure sudo to allow
# make install with no password.
#	 make-install-prefix sudo -S

# purge-old-logs controls whether old log files should be removed after the
# latest build finishes. Set to true to enable it.
#	 purge-old-logs false

# binpath controls the value of the PATH environment variable during
# compilation.  If you have unusual tools that need to be in the path to build
# KDE, add them here.  KDE's and Qt's programs are automatically added.
# If you leave this option blank, it will default to the PATH that kdesvn-build had
# when it was started.
#	binpath /bin:/usr/bin:/usr/local/bin:/usr/X11R6/bin
#	binpath /usr/lib/ccache/bin:/bin:/usr/bin:/usr/local/bin:/usr/X11R6/bin

# This directory is where everything gets built before it is installed.  By
# default it is relative to the value for source-dir.  You can specify an
# absolute path if you'd like (begin the path with a slash).
#	build-dir build

# These are the compilation flags to use by default when compiling KDE.
# gcc supports a -march option in order to generate specific code for pentium4, athlon-xp,
# etc.  See the gcc man page for more information.
#
# NOTE: For KDE 4 these flags are only applied if you set the CMAKE_BUILD_TYPE setting
# to "none" (see the cmake-options setting)
#	cxxflags -pipe -march=native # Don't use native with distributed build

# You can use the set-env option to add values to the build environment.
#	set-env LDFLAGS -Wl,-O1   # Optimize the linker, takes longer.

# If you use software which requires pkg-config, and you need to add entries
# to your pkg-config path, you can also use set-env for that.  Some broken
# systems require you to set this to find e.g. glib.
#	set-env PKG_CONFIG_PATH /opt/gnome/lib/pkgconfig
end global

# qt-copy is a copy of Trolltech's Qt, optionally with some bugfixes and
# optimizations added.  It is the easiest way to get Qt if you don't already
# have it (and you don't want to use your distro's tools to install it.)
module qt-copy
# Configure flags.  If you compile phonon separately make sure to pass
# -no-phonon.  Alternative if you use Qt's phonon, ensure kdesupport is
# built without Phonon.
	configure-flags -qt-gif -no-exceptions -fast -qdbus \
	                -nomake examples -nomake demos \
	                -no-phonon # Phonon built separately

#	make-options -j2

# apply-qt-patches adds some recommended patches, normally bugfixes or
# optimizations awaiting the next Qt release.
	apply-qt-patches true # Works with Qt 3 and 4, recommended as well.

# If you use the branch option up in the "global" section to set a
# default KDE version you should manually choose a branch here for Qt.
#	branch 4.4
end module

# kdesupport contains taglib and QCA, and the Strigi library required for
# kdelibs in KDE 4.  taglib is required for JuK, amarok, and the meta info
# reader for music files in Konqueror.
# kdesupport is also the bearer of automoc and all that is good and right with
# CMake, install it before all KDE modules but after Qt 4.
module kdesupport
# To get the necessary kdesupport stuff for KDE-4.2, use:
#	tag kdesupport-for-4.2/kdesupport

# Need to disable Phonon because a qt-copy comment said so?  Uncomment the
# following:
#	cmake-options -DBUILD_phonon=OFF
end module

# Phonon is the multimedia interface for KDE 4.  It is developed in kdesupport
# but a separate branch is available for stability.  It may also be included
# with Qt. KDE trunk depends on phonon trunk, so disable it for now.
# You can do phonon trunk if you'd like but it's included in kdesupport trunk
# anyways.
#module phonon
#	branch 4.2
#end module

# kdelibs are the base KDE libraries needed by all KDE applications.
module kdelibs
# KDE 4 uses CMake, if you need to pass options to the cmake command, use this
# option:
#	cmake-options -DKDE4_BUILD_TESTS:BOOL=ON

# If you're a programmer you may want to build the API docs.  There is a
# separate script in kdesdk/scripts to do that for you however.
end module

# kdepimlibs contains required PIM (mail, instant messenger, etc.) basics
# that are needed by some other KDE modules.  Should be built after kdelibs
module kdepimlibs
end module

# kdebase contains useful general-purpose programs, normally people would
# expect a usable desktop to have these.  Includes required programs and
# libraries in runtime/, and Konqueror, Dolphin, and Plasma.
module kdebase
end module

# kdemultimedia contains JuK, noatun, Kaboodle, and other KDE multimedia
# applications.  It does not include amarok, which is in extragear/multimedia
module kdemultimedia
end module

# ... Well, they're games. ;)
module kdegames
end module

# kdesdk is a useful module for software developers.  It is where kdesvn-build
# is developed, in addition to other handy scripts for KDE and general software
# developers.  Programmers *need* this module for kcachegrind
module kdesdk
end module

# kdenetwork has Kopete and other useful applications for the Internet and
# other networks.
module kdenetwork
end module

# kdepim contains KMail, Kontact, KOrganizer, and other insanely useful
# programs that help you keep track of things.
module kdepim
end module

# kdeadmin has system administration tools for your computer.
#module kdeadmin
#end module

# kdebindings is useful for software developers, and for those who wish to run
# some KDE programs that don't use C++.
#module kdebindings

# kdebindings will probably need to use the following option to install
# successfully due to necessary integration with the program interpreters.  You
# must configure the sudo program first to allow for passwordless operation.
#	make-install-prefix sudo -S
#end module

# kdeutils has miscellaneous programs which can be useful.  You probably won't
# die if you remove this from the config file though.
module kdeutils
end module

# kdegraphics contains various programs useful for graphics editing.  It
# doesn't include Krita, which is part of KOffice, but it is worth it just for
# KolourPaint and Gwenview.
module kdegraphics
end module

# Contains nifty diversions of time, which generally aren't games.
module kdetoys
end module

# Educational programs.  Some are actually quite fun even if you're not trying
# to learn anything.
module kdeedu
end module

# Extra collection of useful plasma applets, runners, data engines, etc.
module kdeplasma-addons
end module

# The KDE Office Suite.  Includes a pretty expansive collection of programs.
# It is rather large, so you can cut download and build times by removing it
# from this file.
#module koffice
#end module

## A prerequisite for kdevelop other modules using the kdevelop platform, like
# kdewebdev
#module kdevplatform
#end module

## The KDevelop IDE, useful for developing all kinds of programs.  If you don't
# plan on being a software developer you can save time by removing this from
# your configuration.
#module kdevelop
#end module

# Includes Quanta Plus and other web design tools.
#module kdewebdev
#end module

# Modules in extragear and playground can also be added.
#
# To see what you can find in the various modules, browse
# http://websvn.kde.org/trunk/extragear and
# http://websvn.kde.org/trunk/playground

# Includes various libraries needed by other applications in extragear.
#module extragear/libs

# If you don't like the default name that kdesvn-build gives modules on-disk,
# you can use dest-dir to change it.
#	dest-dir extragear-libs
#end module

# Includes the popular K3B and Amarok programs.
#module extragear/multimedia
#end module

# Includes various photo management applications.
#module extragear/graphics
#end module

# module extragear/network
# end module

# module playground/games
# end module

# Add more modules as needed.
